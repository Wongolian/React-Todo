{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\react-todo\\\\src\\\\components\\\\TodoList.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggleTodoAction, deleteTodoAction } from '../redux';\nimport styled from 'styled-components';\nconst TodoListUL = styled.ul`\n    width: 50%;\n    background: #ddd;\n    margin: auto;\n    padding: 20px;\n    color: #232323;\n    list-style: none;\n`;\nconst TodoListItem = styled.li`\n    font-size: 300%;\n`;\nexport default (() => {\n  const todos = useSelector(state => state.todos);\n  const dispatch = useDispatch();\n\n  const toggleTodo = todoId => dispatch(toggleTodoAction(todoId));\n\n  const deleteTodo = todoId => dispatch(deleteTodoAction(todoId));\n\n  return React.createElement(TodoListUL, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, todos.map(todo => React.createElement(TodoListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    key: todo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: todo.complete,\n    onChange: toggleTodo.bind(null, todo.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: todo.complete ? 'complete' : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, todo.name), React.createElement(\"span\", {\n    className: \"delete-button\",\n    onClick: deleteTodo.bind(null, todo.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"X\")))));\n});","map":{"version":3,"sources":["C:/Coding/react-todo/src/components/TodoList.js"],"names":["React","useSelector","useDispatch","toggleTodoAction","deleteTodoAction","styled","TodoListUL","ul","TodoListItem","li","todos","state","dispatch","toggleTodo","todoId","deleteTodo","map","todo","id","complete","bind","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAkD,UAAlD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAACE,EAAG;;;;;;;CAA7B;AASA,MAAMC,YAAY,GAAGH,MAAM,CAACI,EAAG;;CAA/B;AAIA,gBAAe,MAAM;AAEjB,QAAMC,KAAK,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,QAAME,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,UAAU,GAAIC,MAAD,IAAYF,QAAQ,CAACT,gBAAgB,CAACW,MAAD,CAAjB,CAAvC;;AACA,QAAMC,UAAU,GAAID,MAAD,IAAYF,QAAQ,CAACR,gBAAgB,CAACU,MAAD,CAAjB,CAAvC;;AAEA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,CAACM,GAAN,CAAWC,IAAD,IACP,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,IAAI,EAAC,UADL;AAEA,IAAA,OAAO,EAAED,IAAI,CAACE,QAFd;AAGA,IAAA,QAAQ,EAAEN,UAAU,CAACO,IAAX,CAAgB,IAAhB,EAAsBH,IAAI,CAACC,EAA3B,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI;AAAM,IAAA,SAAS,EAAED,IAAI,CAACE,QAAL,GAAgB,UAAhB,GAA6B,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDF,IAAI,CAACI,IAA1D,CANJ,EAOI;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,OAAO,EAAEN,UAAU,CAACK,IAAX,CAAgB,IAAhB,EAAsBH,IAAI,CAACC,EAA3B,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPJ,CADA,CADH,CADL,CADJ;AAiBH,CAzBD","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport { toggleTodoAction, deleteTodoAction} from '../redux';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoListUL = styled.ul`\r\n    width: 50%;\r\n    background: #ddd;\r\n    margin: auto;\r\n    padding: 20px;\r\n    color: #232323;\r\n    list-style: none;\r\n`;\r\n\r\nconst TodoListItem = styled.li`\r\n    font-size: 300%;\r\n`;\r\n\r\nexport default () => {\r\n\r\n    const todos = useSelector((state) => state.todos);\r\n    const dispatch = useDispatch();\r\n\r\n    const toggleTodo = (todoId) => dispatch(toggleTodoAction(todoId));\r\n    const deleteTodo = (todoId) => dispatch(deleteTodoAction(todoId));\r\n\r\n    return (\r\n        <TodoListUL>\r\n            {todos.map((todo) => (\r\n                <TodoListItem>\r\n                <li key={todo.id}>\r\n                    <input \r\n                    type=\"checkbox\"\r\n                    checked={todo.complete}\r\n                    onChange={toggleTodo.bind(null, todo.id)}\r\n                    />\r\n                    <span className={todo.complete ? 'complete' : null}>{todo.name}</span>\r\n                    <span className=\"delete-button\" onClick={deleteTodo.bind(null, todo.id)}>X</span>\r\n                </li>\r\n                </TodoListItem>\r\n            ))}\r\n        </TodoListUL>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}